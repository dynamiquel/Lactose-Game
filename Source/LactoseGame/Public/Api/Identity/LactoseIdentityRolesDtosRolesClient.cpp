//
// This file was generated by Catalyst's Unreal compiler at 02/05/2025 17:42:48.
// It is recommended not to modify this file. Modify the source spec file instead.
//

#include "LactoseIdentityRolesDtosRolesClient.h"

#include "CatalystSubsystem.h"
#include "LactoseIdentityRolesDtosRoles.h"

ULactoseIdentityRolesDtosRolesClient::ULactoseIdentityRolesDtosRolesClient()
{
    BaseUrl = TEXT("https://YouNeedToSet.Me");
}

TSharedRef<Lactose::Identity::Roles::Dtos::Roles::FQueryRoles> ULactoseIdentityRolesDtosRolesClient::QueryRoles(
    const FLactoseIdentityRolesDtosQueryRolesRequest& Request,
    float Timeout)
{
    TArray<uint8> RequestBytes = Request.ToBytes();

    auto Operation = UCatalystSubsystem::Get().CreateOperation<Lactose::Identity::Roles::Dtos::Roles::FQueryRoles>(
        BaseUrl + TEXT("/roles") + TEXT("/queryRoles"),
        Catalyst::Verbs::POST,
        MoveTemp(RequestBytes),
        Timeout == Timeout::Default ? DefaultTimeout : Timeout
    );

    return Operation;
}

TSharedRef<Lactose::Identity::Roles::Dtos::Roles::FGetRoles> ULactoseIdentityRolesDtosRolesClient::GetRoles(
    const FLactoseIdentityRolesDtosGetRolesRequest& Request,
    float Timeout)
{
    TArray<uint8> RequestBytes = Request.ToBytes();

    auto Operation = UCatalystSubsystem::Get().CreateOperation<Lactose::Identity::Roles::Dtos::Roles::FGetRoles>(
        BaseUrl + TEXT("/roles") + TEXT("/getRoles"),
        Catalyst::Verbs::POST,
        MoveTemp(RequestBytes),
        Timeout == Timeout::Default ? DefaultTimeout : Timeout
    );

    return Operation;
}

TSharedRef<Lactose::Identity::Roles::Dtos::Roles::FCreateRoleRequest> ULactoseIdentityRolesDtosRolesClient::CreateRoleRequest(
    const FLactoseIdentityRolesDtosCreateRoleRequest& Request,
    float Timeout)
{
    TArray<uint8> RequestBytes = Request.ToBytes();

    auto Operation = UCatalystSubsystem::Get().CreateOperation<Lactose::Identity::Roles::Dtos::Roles::FCreateRoleRequest>(
        BaseUrl + TEXT("/roles") + TEXT("/createRoleRequest"),
        Catalyst::Verbs::POST,
        MoveTemp(RequestBytes),
        Timeout == Timeout::Default ? DefaultTimeout : Timeout
    );

    return Operation;
}
